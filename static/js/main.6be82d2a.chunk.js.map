{"version":3,"sources":["BooksAPI.js","MoveToOptions.js","BookDetails.js","Book.js","SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","MoveToOptions","test","e","console","log","target","value","_this$props","this","props","changeShelf","react_default","a","createElement","className","onChange","Component","BookDetails","bookGroup","map","key","style","width","height","backgroundImage","imageLinks","thumbnail","src_MoveToOptions","title","undefined","authors","Book","state","bookshelfTitle","shelfTitle","getCurrentlyReading","filter","x","wantToReadBooks","readBooks","_this2","groupedBooks","_","groupBy","keys","i","src_BookDetails","react_router_dom","to","SearchPage","queryBooks","searchBooks","type","placeholder","event","length","BooksApp","bookDetails","BooksAPI","_this","setState","trim","moveBook","b","currentState","react_router","path","element","src_SearchPage","src_Book","React","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6be82d2a.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = 123\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import './App.css';\r\nimport React, {Component} from 'react';\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\nclass MoveToOptions extends Component {\r\n\r\n  test = (e,book) => {\r\n    console.log(e.target.value);\r\n  }\r\nrender() {\r\n    const {book,changeShelf} = this.props;\r\n    return(\r\n        <div className=\"book-shelf-changer\">\r\n            <select onChange={(e) => changeShelf(book,e)} >\r\n              <option value=\"move\">Move to...</option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MoveToOptions","import React, {Component} from 'react'\r\nimport MoveToOptions from './MoveToOptions';\r\n\r\n\r\nclass BookDetails extends Component {\r\n    \r\n    render() {\r\n      const{ changeShelf } = this.props;\r\n        return (\r\n          <ol className=\"books-grid\">\r\n                {this.props.bookGroup.map((book) => (\r\n                    <li key={book.id}>\r\n                    <div className=\"book\">\r\n                      <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 188 }}></div>\r\n                        <MoveToOptions \r\n                          book={book}\r\n                          changeShelf={changeShelf}\r\n                        />\r\n                      </div>\r\n                      <div className=\"book-title\">{book.title}</div>\r\n                      <div className=\"book-authors\">{book.authors === undefined ? \"Unknown\" : book.authors[0]}</div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n            </ol>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookDetails","import './App.css';\r\nimport React, {Component} from 'react';\r\nimport BookDetails from './BookDetails';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Book extends Component {\r\n\r\n  state = {\r\n    bookshelfTitle: [\"Currently Reading\", \"Want to Read\", \"Read\"],\r\n    shelfTitle: ['currentlyReading', 'wantToRead', 'read']\r\n  }\r\n\r\n  getCurrentlyReading = (books) => {\r\n     return (books.filter(x => x.shelf == \"currentlyReading\"));\r\n  }\r\n\r\n  wantToReadBooks = (books) => {\r\n    return (books.filter(x => x.shelf == \"wantToRead\"));\r\n  }\r\n\r\n  readBooks = (books) => {\r\n    return (books.filter(x => x.shelf == \"read\"));\r\n  }\r\n\r\n    render() {\r\n    const {books, changeShelf} = this.props;\r\n    let cr = this.getCurrentlyReading(books);\r\n    let groupedBooks = _.groupBy(books, book => book.shelf);\r\n        return(\r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n              <div></div>\r\n          <div>\r\n          {Object.keys(groupedBooks).map((book, i) => (\r\n            <div key={this.state.bookshelfTitle[i]} className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">{this.state.bookshelfTitle[i]}</h2>\r\n              <div className=\"bookshelf-books\">              \r\n                <BookDetails\r\n                  bookGroup={groupedBooks[book]}\r\n                  changeShelf={changeShelf}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <Link \r\n            to='/search'\r\n            className='open-search'\r\n            >Add a book\r\n          </Link>\r\n          </div>\r\n          </div>\r\n          </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import './App.css';\r\nimport React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport BookDetails from './BookDetails';\r\n\r\nclass SearchPage extends Component {\r\n    render() {\r\n        const {queryBooks, searchBooks, changeShelf} = this.props;\r\n        return (            \r\n          <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link\r\n                  to='/'\r\n                  className='close-search'\r\n                  >Close\r\n              </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input \r\n                  type=\"text\" \r\n                  placeholder=\"Search by title or author\"\r\n                  onChange={(event) => queryBooks(event.target.value)}\r\n                  />\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                {searchBooks !== undefined && searchBooks.length > 0 && (\r\n              <BookDetails\r\n                  bookGroup={searchBooks}\r\n                  changeShelf={changeShelf}\r\n                />\r\n                )}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPage","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport MoveToOptions from './MoveToOptions'\r\nimport Book from './Book'\r\nimport SearchPage from './SearchPage'\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n      .then((books) => {\r\n          this.setState(() => ({\r\n            books\r\n          }))\r\n      })\r\n}\r\n\r\n  state = {    \r\n    books: [],\r\n    query: \"\",\r\n    bookDetails: []\r\n  }\r\n\r\n  searchBooks = (query) => {\r\n    BooksAPI.search(query)\r\n    .then((book) => {\r\n        this.setState(() => ({\r\n          query: query.trim(),\r\n          bookDetails: book\r\n        }))\r\n    })\r\n  }\r\n\r\n  moveBook = (book,shelf) => {\r\n    BooksAPI.update(book, shelf.target.value)\r\n    .then((b) => {\r\n        this.setState((currentState) => ({\r\n        //I thought doing a setState would rerender the page with the changed books but it is not\r\n          query: currentState.query\r\n        }))\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">       \r\n          <Routes>\r\n            <Route path='/search' element={\r\n          <SearchPage\r\n            queryBooks={this.searchBooks}\r\n            searchBooks={this.state.bookDetails}\r\n            changeShelf={this.moveBook}      \r\n          />}></Route>\r\n              <Route path=\"/\" element={\r\n                <Book \r\n                    books={this.state.books} \r\n                    changeShelf={this.moveBook}                   \r\n                />}></Route>\r\n                </Routes>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n"],"sourceRoot":""}